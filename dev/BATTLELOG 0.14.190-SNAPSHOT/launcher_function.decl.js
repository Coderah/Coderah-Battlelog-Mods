killGameTimeout: null,init: function(template) 
instance: null,getExpectedVersion: function() 
getExpectedVersionHex: function() 
veniceProtocolVersion: "1",userSettings: 
pingSiteLatency: latestGameVersions: 
queryRequests: 0,currentState: "",currentStatePersonaId: "",targetState: "",STATE: 
ALERT: ERR_LOGIN_ACCOUNT: "ERR_LOGIN_ACCOUNT",ERR_LOGIN_PERSONA: "ERR_LOGIN_PERSONA",ERR_SERVERCONNECT: "ERR_SERVERCONNECT",ERR_SERVERCONNECT_FULL: "ERR_SERVERCONNECT_FULL",ERR_SERVERCONNECT_WRONGPASSWORD: "ERR_SERVERCONNECT_WRONGPASSWORD",ERR_SERVERCONNECT_INVALIDGAME: "ERR_SERVERCONNECT_INVALIDGAME",ERR_SERVER_KICKED: "ERR_SERVER_KICKED",ERR_SERVERCONNECT_BANNED: "ERR_SERVERCONNECT_BANNED",ERR_PARAM_MISSINGTOKEN: "ERR_PARAM_MISSINGTOKEN",ERR_PARAM_MISSINGPERSONA: "ERR_PARAM_MISSINGPERSONA",ERR_PARAM_INVALIDGAMEID: "ERR_PARAM_INVALIDGAMEID",ERR_PARAM_INVALIDUSERID: "ERR_PARAM_INVALIDUSERID",ERR_PARAM_INVALIDMISSION: "ERR_PARAM_INVALIDMISSION",ERR_SHOW_TOS: "ERR_SHOW_TOS",ERR_CAMPAIGN_NOSAVE: "ERR_CAMPAIGN_NOSAVE",ERR_CAMPAIGN_LOADSAVE: "ERR_CAMPAIGN_LOADSAVE",ERR_CONFIG_MISSMATCH: "ERR_CONFIG_MISSMATCH",ERR_ALREADY_IN_QUEUE: "ERR_ALREADY_IN_QUEUE",ERR_RESERVATION_ALREADY_EXIST: "ERR_RESERVATION_ALREADY_EXIST",ERR_MATCHMAKE_FAILED: "ERR_MATCHMAKE_FAILED",ERR_ALREADY_GAME_MEMBER: "ERR_ALREADY_GAME_MEMBER",ERR_DISCONNECT_GAME_WRONGPROTOCOLVERSION: "ERR_DISCONNECT_GAME_WRONGPROTOCOLVERSION",ERR_DISCONNECT_GAME_WRONGTITLEVERSION: "ERR_DISCONNECT_GAME_WRONGTITLEVERSION",ERR_DISCONNECT_GAME_SERVERFULL: "ERR_DISCONNECT_GAME_SERVERFULL",ERR_DISCONNECT_GAME_KICKED: "ERR_DISCONNECT_GAME_KICKED",ERR_DISCONNECT_GAME_DEMOOVER: "ERR_DISCONNECT_GAME_DEMOOVER",ERR_DISCONNECT_GAME_BANNED: "ERR_DISCONNECT_GAME_BANNED",ERR_DISCONNECT_GAME_TIMEDOUT: "ERR_DISCONNECT_GAME_TIMEDOUT",ERR_DISCONNECT_GAME_NOREPLY: "ERR_DISCONNECT_GAME_NOREPLY",ERR_DISCONNECT_GAME_BADCONTENT: "ERR_DISCONNECT_GAME_BADCONTENT",ERR_DISCONNECT_GAME: "ERR_DISCONNECT_GAME",ERR_DISCONNECT_BLAZE: "ERR_DISCONNECT_BLAZE",ERR_LOGIN_INVALIDTOKEN: "ERR_LOGIN_INVALIDTOKEN",ERR_LOGIN_EXPIREDTOKEN: "ERR_LOGIN_EXPIREDTOKEN",ERR_LOGIN_PERSONANOTFOUND: "ERR_LOGIN_PERSONANOTFOUND",ERR_INVALID_GAME_STATE_ACTION: "ERR_INVALID_GAME_STATE_ACTION",ERR_GENERIC: "ERR_GENERIC",ERR_LAUNCH_DISABLED: "ERR_LAUNCH_DISABLED",ERR_EMPTY_JOINSTATE: "ERR_EMPTY_JOINSTATE",ERR_BACKEND_ROUTE: "ERR_BACKEND_ROUTE",ERR_BACKEND_HTTP: "ERR_BACKEND_HTTP",ERR_FAILED_PERSONACALL: "ERR_FAILED_PERSONACALL",ERR_PING_PINGSITES: "ERR_PING_PINGSITES",ERR_NO_PINGSITE_LIST: "ERR_NO_PINGSITE_LIST",ERR_LOGIN_ACCOUNT_ERROR_CODE: 
ERR_LOGIN_PERSONA_ERROR_CODE: UNSPECIFIED_ERROR: 1,SERVICE_UNAVAILABLE: 25,PERSONA_DISABLED_BY_CSR: 30ERR_CONFIG_MISSMATCH_ERROR_CODE: 
ERR_GENERIC_ERROR_CODE: BACKEND: 1,UNKNOWN: 2,DEFAULT: 3,INTERNAL_SERVER_ERROR: 4,AJAX_ERROR: 5,MANGLED_RESPONSE: 6,SERVICE_UNAVAILABLE: 7ERR_MATCHMAKE: 
ERR_PLAYER_ACTION: JOINING: 1,LEAVING: 2ERR_GROUP_JOIN: 
INSTALL_STATE: OK: "OK",OUT_OF_DATE: "OUT_OF_DATE",ERR_VERSION_UNREADABLE: "ERR_VERSION_UNREADABLE",ERR_NO_VERSION_FOUND: "ERR_NO_VERSION_FOUND",ERR_GAME_NOT_FOUND: "ERR_GAME_NOT_FOUND"JOIN_STATE: 
queryServer: function(server, callback) 
pingServers: function(serverIdList, ipList) 
verifyPassword: function(game, gameServerGuid, plaintextPassword, callback) 
error: function(jqXHR, textStatus, errorThrown) 
joinMpServer: function(persona, game, gameId, options, groupPersonaIdList, callback) 
joinMpFriend: function(persona, game, friendPersonaId, options, callback) 
_reserveSlot: function(game, url, options, groupPersonaIdList, callback) 
error: function(jqXHR, textStatus, errorThrown) 
_claimReservation: function(reservation, options) 
_storeJoinOptions: function(game, personaId, gameId, options) 
_retrieveJoinOptions: function(game, personaId, gameId) 
_deleteJoinOptions: function(game, personaId, gameId) 
_reservationReady: function(reservationEvent) 
joinReservation: function(reservation) 
cancelReservation: function(reservation, callback) 
success: function(response) 
error: function(jqXHR, textStatus, errorThrown) 
createPrivateCoOpServer: function(persona, game, level, difficulty) 
joinPrivateCoOpServer: function(persona, game, hostPersonaId) 
startPublicCoOpMatchmaking: function(persona, game, matchmakeRules) 
error: function(jqXHR, textStatus, errorThrown) 
startMpMatchmaking: function(persona, game, matchmakeRules, groupPersonaIdList, callback) 
 matchmakeRules, groupPersonaIdList: groupPersonaIdList 
error: function(jqXHR, textStatus, errorThrown) 
cancelMpMatchmaking: function(persona, game, matchmakingSessionId, callback) 
success: function(response) 
error: function(jqXHR, textStatus, errorThrown) 
_matchmakeSuccessful: function(reservationEvent) 
_matchmakeFail: function(reservationFailEvent) 
launchCampaignMenu: function(persona, game) 
leaveQueue: function(persona, game, gameId) 
success: function(response) 
error: function(jqXHR, textStatus, errorThrown) 
checkForPatchAvailable: function(game, gameType, patchingDoneCallback) 
_getGameAttribute: function(game, attributeName, callback) 
registerForEvent: function(event, callback) 
unregisterForEvent: function(event, callback) 
_triggerEvent: function(event, data) 
_getInstalledGameVersion: function(game, callback) 
isPatcherInstalled: function(sku, callback) 
showInPatcher: function(game, sku, callback) 
isGameInstalled: function(game, callback) 
isGameRunning: function(game, callback) 
getGamesInstalled: function() 
getGamesRunning: function() 
_changeGameToState: function(persona, game, gameType, requestedState, args) 
_doChangeGameToState: function(persona, game, gameType, requestedState, args) 
_eventHandler: function(pluginGame, cmd, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) 
_updateCurrentState: function(game, newCurrentState, newTargetState, personaId, levelName, difficulty) 
checkVersion: function() 
_getGameSettings: function(game, callback) 
error: function() 
_invalidateGameSetting: function(game) 
_getCommandLine: function(game, gameType, callback) 
_getPingSiteLatency: function(game, callback) 
_getToken: function(game, callback) 
error: function(XMLHttpRequest, textStatus, errorThrown) 
_gameToPluginGame: function(game) 
_pluginGameToGame: function(pluginGame) 
restoreWindow: function(game) 
_killGame: function(game, count, callback) 
_handleAlert: function(game, alertType, errorCode) 
_serverQueueUpdate: function(game, personaId, queuePosition) 
_escapePersonaName: function(personaName) 
_getLatestGameVersion: function(game, sku, callback) 
error: function() 
_ajaxHelper: function(game, ajaxOptions) 
getInstance: function() 
debug: function(msg) 